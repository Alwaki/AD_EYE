
<launch>
    <arg name="model"/>
    <arg name="tb3_id"/>
    <arg name="leader_id"/>
    <arg name="tb3_x"/>
    <arg name="tb3_y"/>
    <arg name="tb3_z"/>
    <arg name="tb3_yaw"/>

     <group ns = "$(arg tb3_id)">

        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find platooning)/models/urdf/turtlebot3_$(arg model).urdf.xacro" />

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
        <param name="publish_frequency" type="double" value="20.0" />
        <param name="tf_prefix" value="$(arg tb3_id)" />
        </node>

        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg tb3_id) -x $(arg tb3_x) -y $(arg tb3_y) -z $(arg tb3_z) -Y $(arg tb3_yaw) -param robot_description" />


        <!--
        <node name="control_node1" pkg="platooning" type="controller_sim_T1.py" output="screen"></node>
        <node name="control_node2" pkg="platooning" type="controller_sim_T2.py" output="screen"></node>-->

        <node pkg="tf" type="static_transform_publisher" name="$(arg tb3_id)frame_broadcaster" args="1 0 0 0 0 0 1 $(arg tb3_id)/base_footprint $(arg tb3_id)/base_link 100" />
        <include file="$(find platooning)/launch/sensor_filter2.launch"/>





        <!--<include file="$(find platooning)/launch/amcl.launch" />-->

        <node name="control_node" pkg="platooning" type="physical_node.py" output="screen">
            <remap from="/odom" to="/$(arg tb3_id)/odometry/filtered"/>
            <remap from="/vehicle/odom" to="/$(arg leader_id)/odom"/>
        </node>
     </group>
</launch>
